<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.6">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.14.0">
      <projectUrl>https://github.com/itchio/butler/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.8.1">
      <teamDomain></teamDomain>
      <token></token>
      <room></room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
    <EnvInjectJobProperty plugin="envinject@1.92.1">
      <info>
        <propertiesContent>GOPATH=$WORKSPACE/../../../..</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
      <contributors/>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git@github.com:itchio/butler.git</url>
        <credentialsId>f5387502-f743-45da-b8d7-1a8bf7d2a54e</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>**</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.14.0">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>workspace/butler/$os-$arch/src/github.com/itchio/butler</customWorkspace>
  <axes>
    <hudson.matrix.LabelExpAxis>
      <name>os</name>
      <values>
        <string>windows</string>
        <string>osx</string>
        <string>linux</string>
      </values>
    </hudson.matrix.LabelExpAxis>
    <hudson.matrix.TextAxis>
      <name>arch</name>
      <values>
        <string>386</string>
        <string>amd64</string>
      </values>
    </hudson.matrix.TextAxis>
  </axes>
  <combinationFilter>(os =="osx").implies(arch=="amd64")</combinationFilter>
  <builders>
    <EnvInjectBuilder plugin="envinject@1.92.1">
      <info>
        <propertiesContent>BUTLER_LDFLAGS=-X main.version=travis-head
GOARCH=$arch
CGO_ENABLED=1
CC_FOR_TARGET=gcc
CXX_FOR_TARGET=g++</propertiesContent>
      </info>
    </EnvInjectBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.ExpressionCondition" plugin="run-condition@1.0">
        <expression>windows-386</expression>
        <label>$os-$arch</label>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>Path=C:\msys64\mingw32\bin;$Path</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.ExpressionCondition" plugin="run-condition@1.0">
        <expression>windows-amd64</expression>
        <label>$os-$arch</label>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>Path=C:\msys64\mingw64\bin;$Path</propertiesContent>
          </info>
        </EnvInjectBuilder>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.ExpressionCondition" plugin="run-condition@1.0">
        <expression>(linux|osx)</expression>
        <label>$os</label>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>PATH=$PATH:/usr/local/go/bin</propertiesContent>
          </info>
        </EnvInjectBuilder>
        <hudson.tasks.Shell>
          <command>go get -d -v ./...
go build -v -x -ldflags "$BUTLER_LDFLAGS" ./cmd/butler
file butler
./butler -V
7za a butler.7z butler</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.ExpressionCondition" plugin="run-condition@1.0">
        <expression>windows</expression>
        <label>$os</label>
      </runCondition>
      <conditionalbuilders>
        <EnvInjectBuilder plugin="envinject@1.92.1">
          <info>
            <propertiesContent>Path=C:\msys64\usr\bin;C:\msys64\usr\lib\p7zip;$Path</propertiesContent>
          </info>
        </EnvInjectBuilder>
        <hudson.tasks.BatchFile>
          <command>go get -d -v ./...&#xd;
go build -v -x -ldflags "%BUTLER_LDFLAGS%" ./cmd/butler&#xd;
file butler.exe&#xd;
butler -V&#xd;
7za a butler.7z butler.exe</command>
        </hudson.tasks.BatchFile>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>butler.7z</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.plugins.s3.S3BucketPublisher plugin="s3@0.8">
      <profileName>misc.amos.me</profileName>
      <entries>
        <hudson.plugins.s3.Entry>
          <bucket>misc.amos.me/butler-jenkins/$os-$arch/head</bucket>
          <sourceFile>butler.7z</sourceFile>
          <storageClass>STANDARD</storageClass>
          <selectedRegion>us-east-1</selectedRegion>
          <noUploadOnFailure>true</noUploadOnFailure>
          <uploadFromSlave>false</uploadFromSlave>
          <managedArtifacts>false</managedArtifacts>
          <useServerSideEncryption>false</useServerSideEncryption>
          <flatten>false</flatten>
        </hudson.plugins.s3.Entry>
      </entries>
      <dontWaitForConcurrentBuildCompletion>false</dontWaitForConcurrentBuildCompletion>
      <userMetadata/>
    </hudson.plugins.s3.S3BucketPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.28">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
  <childCustomWorkspace>.</childCustomWorkspace>
</matrix-project>
